<?xml version="1.0" encoding="utf-8"?>
<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="SecurityFilters" msdata:IsDataSet="true" msdata:DataType="System.Collections.Generic.ICollection">
            <xsd:element name="Filter">    
                <xsd:attribute name="id">1</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:"[^"]*[^-]?>)|(?:[^\w\s]\s*\/>)|(?:>")]]></xsd:attribute>
                <xsd:attribute name="description">Finds html breaking injections including whitespace attacks</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                        <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                        <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    </xsd:list>
                </xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">2</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:"+.*[<=]\s*"[^"]+")|(?:"\s*\w+\s*=)|(?:>\w=\/)|(?:#.+\)["\s]*>)|(?:"\s*(?:src|style|on\w+)\s*=\s*")|(?:[^"]?"[,;\s]+\w*[\[\(])]]></xsd:attribute>
                <xsd:attribute name="description">Finds attribute breaking injections including whitespace attacks</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                        <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                        <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    </xsd:list>
                </xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">3</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:^>[\w\s]*<\/?\w{2,}>)]]></xsd:attribute>
                <xsd:attribute name="description">Finds unquoted attribute breaking injections</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">2</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">4</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:[+\/]\s*name[\W\d]*[)+])|(?:;\W*url\s*=)|(?:[^\w\s\/?:>]\s*(?:location|referrer|name)\s*[^\/\w\s-])]]></xsd:attribute>
                <xsd:attribute name="description">Detects url-, name-, JSON, and referrer-contained payload attacks</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">5</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\W\s*hash\s*[^\w\s-])|(?:\w+=\W*[^,]*,[^\s(]\s*\()|(?:\?"[^\s"]":)|(?:(?<!\/)__[a-z]+__)|(?:(?:^|[\s)\]\}])(?:s|g)etter\s*=)]]></xsd:attribute>
                <xsd:attribute name="description">Detects hash-contained xss payload attacks, setter usage and property overloading</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">6</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:with\s*\(\s*.+\s*\)\s*\w+\s*\()|(?:(?:do|while|for)\s*\([^)]*\)\s*\{)|(?:\/[\w\s]*\[\W*\w)]]></xsd:attribute>
                <xsd:attribute name="description">Detects self contained xss via with(), common loops and regex to string conversion</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                        <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                        <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">7</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:[=(].+\?.+:)|(?:with\([^)]*\)\))|(?:\.\s*source\W)]]></xsd:attribute>
                <xsd:attribute name="description">Detects JavaScript with(), ternary operators and XML predicate attacks</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">8</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\/\w*\s*\)\s*\()|(?:\([\w\s]+\([\w\s]+\)[\w\s]+\))|(?:(?<!(?:mozilla\/\d\.\d\s))\([^)[]+\[[^\]]+\][^)]*\))|(?:[^\s!][{([][^({[]+[{([][^}\])]+[}\])][\s+",\d]*[}\])])|(?:"\)?\]\W*\[)|(?:=\s*[^\s:;]+\s*[{([][^}\])]+[}\])];)]]></xsd:attribute>
                <xsd:attribute name="description">Detects self-executing JavaScript functions</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">9</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\\u00[a-f0-9]{2})|(?:\\x0*[a-f0-9]{2})|(?:\\\d{2,3})]]></xsd:attribute>
                <xsd:attribute name="description">Detects the IE octal, hex and unicode entities</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">2</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">10</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:(?:\/|\\)?\.+(\/|\\)(?:\.+)?)|(?:\w+\.exe\??\s)|(?:;\s*\w+\s*\/[\w*-]+\/)|(?:\d\.\dx\|)|(?:%(?:c0\.|af\.|5c\.))|(?:\/(?:%2e){2})]]></xsd:attribute>
                <xsd:attribute name="description">Detects basic directory traversal</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">dt</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">11</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:%c0%ae\/)|(?:(?:\/|\\)(home|conf|usr|etc|proc|opt|s?bin|local|dev|tmp|kern|[br]oot|sys|system|windows|winnt|program|%[a-z_-]{3,}%)(?:\/|\\))|(?:(?:\/|\\)inetpub|localstart\.asp|boot\.ini)]]></xsd:attribute>
                <xsd:attribute name="description">Detects specific directory and path traversal</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">dt</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">12</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:etc\/\W*passwd)]]></xsd:attribute>
                <xsd:attribute name="description">Detects etc/passwd inclusion attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">dt</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">13</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:%u(?:ff|00|e\d)\w\w)|(?:(?:%(?:e\w|c[^3\W]|))(?:%\w\w)(?:%\w\w)?)]]></xsd:attribute>
                <xsd:attribute name="description">Detects halfwidth/fullwidth encoded unicode HTML breaking attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">3</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">14</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:#@~\^\w+)|(?:\w+script:|@import[^\w]|;base64|base64,)|(?:\w\s*\([\w\s]+,[\w\s]+,[\w\s]+,[\w\s]+,[\w\s]+,[\w\s]+\))]]></xsd:attribute>
                <xsd:attribute name="description">Detects possible includes, VBSCript/JScript encodeed and packed functions</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">15</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[([^*:\s\w,.\/?+-]\s*)?(?<![a-z]\s)(?<![a-z\/_@\-\|])(\s*return\s*)?(?:create(?:element|attribute|textnode)|[a-z]+events?|setattribute|getelement\w+|appendchild|createrange|createcontextualfragment|removenode|parentnode|decodeuricomponent|\wettimeout|(?:ms)?setimmediate|option|useragent)(?(1)[^\w%"]|(?:\s*[^@\s\w%",.+\-]))]]></xsd:attribute>
                <xsd:attribute name="description">Detects JavaScript DOM/miscellaneous properties and methods</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">6</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">16</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[([^*\s\w,.\/?+-]\s*)?(?<![a-mo-z]\s)(?<![a-z\/_@])(\s*return\s*)?(?:alert|inputbox|showmod(?:al|eless)dialog|showhelp|infinity|isnan|isnull|iterator|msgbox|executeglobal|expression|prompt|write(?:ln)?|confirm|dialog|urn|(?:un)?eval|exec|execscript|tostring|status|execute|window|unescape|navigate|jquery|getscript|extend|prototype)(?(1)[^\w%"]|(?:\s*[^@\s\w%",.:\/+\-]))]]></xsd:attribute>
                <xsd:attribute name="description">Detects possible includes and typical script methods</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">17</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[([^*:\s\w,.\/?+-]\s*)?(?<![a-z]\s)(?<![a-z\/_@])(\s*return\s*)?(?:hash|name|href|navigateandfind|source|pathname|close|constructor|port|protocol|assign|replace|back|forward|document|ownerdocument|window|top|this|self|parent|frames|_?content|date|cookie|innerhtml|innertext|csstext+?|outerhtml|print|moveby|resizeto|createstylesheet|stylesheets)(?(1)[^\w%"]|(?:\s*[^@\/\s\w%.+\-]))]]></xsd:attribute>
                <xsd:attribute name="description">Detects JavaScript object properties and methods</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">18</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[([^*:\s\w,.\/?+-]\s*)?(?<![a-z]\s)(?<![a-z\/_@\-\|])(\s*return\s*)?(?:join|pop|push|reverse|reduce|concat|map|shift|sp?lice|sort|unshift)(?(1)[^\w%"]|(?:\s*[^@\s\w%,.+\-]))]]></xsd:attribute>
                <xsd:attribute name="description">Detects JavaScript array properties and methods</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">19</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[([^*:\s\w,.\/?+-]\s*)?(?<![a-z]\s)(?<![a-z\/_@\-\|])(\s*return\s*)?(?:set|atob|btoa|charat|charcodeat|charset|concat|crypto|frames|fromcharcode|indexof|lastindexof|match|navigator|toolbar|menubar|replace|regexp|slice|split|substr|substring|escape|\w+codeuri\w*)(?(1)[^\w%"]|(?:\s*[^@\s\w%,.+\-]))]]></xsd:attribute>
                <xsd:attribute name="description">Detects JavaScript string properties and methods</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">20</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\)\s*\[)|([^*":\s\w,.\/?+-]\s*)?(?<![a-z]\s)(?<![a-z_@\|])(\s*return\s*)?(?:globalstorage|sessionstorage|postmessage|callee|constructor|content|domain|prototype|try|catch|top|call|apply|url|function|object|array|string|math|if|for\s*(?:each)?|elseif|case|switch|regex|boolean|location|(?:ms)?setimmediate|settimeout|setinterval|void|setexpression|namespace|while)(?(1)[^\w%"]|(?:\s*[^@\s\w%".+\-\/]))]]></xsd:attribute>
                <xsd:attribute name="description">Detects JavaScript language constructs</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">21</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:,\s*(?:alert|showmodaldialog|eval)\s*,)|(?::\s*eval\s*[^\s])|([^:\s\w,.\/?+-]\s*)?(?<![a-z\/_@])(\s*return\s*)?(?:(?:document\s*\.)?(?:.+\/)?(?:alert|eval|msgbox|showmod(?:al|eless)dialog|showhelp|prompt|write(?:ln)?|confirm|dialog|open))\s*(?:[^.a-z\s\-]|(?:\s*[^\s\w,.@\/+-]))|(?:java[\s\/]*\.[\s\/]*lang)|(?:\w\s*=\s*new\s+\w+)|(?:&\s*\w+\s*\)[^,])|(?:\+[\W\d]*new\s+\w+[\W\d]*\+)|(?:document\.\w)]]></xsd:attribute>
                <xsd:attribute name="description">Detects very basic XSS probings</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">3</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">22</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:=\s*(?:top|this|window|content|self|frames|_content))|(?:\/\s*[gimx]*\s*[)}])|(?:[^\s]\s*=\s*script)|(?:\.\s*constructor)|(?:default\s+xml\s+namespace\s*=)|(?:\/\s*\+[^+]+\s*\+\s*\/)]]></xsd:attribute>
                <xsd:attribute name="description">Detects advanced XSS probings via Script(), RexExp, constructors and XML namespaces</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">23</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\.\s*\w+\W*=)|(?:\W\s*(?:location|document)\s*\W[^({[;]+[({[;])|(?:\(\w+\?[:\w]+\))|(?:\w{2,}\s*=\s*\d+[^&\w]\w+)|(?:\]\s*\(\s*\w+)]]></xsd:attribute>
                <xsd:attribute name="description">Detects JavaScript location/document property access and window access obfuscation</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">24</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:[".]script\s*\()|(?:\$\$?\s*\(\s*[\w"])|(?:\/[\w\s]+\/\.)|(?:=\s*\/\w+\/\s*\.)|(?:(?:this|window|top|parent|frames|self|content)\[\s*[(,"]*\s*[\w\$])|(?:,\s*new\s+\w+\s*[,;)])]]></xsd:attribute>
                <xsd:attribute name="description">Detects basic obfuscated JavaScript script injections</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">25</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:=\s*[$\w]\s*[\(\[])|(?:\(\s*(?:this|top|window|self|parent|_?content)\s*\))|(?:src\s*=s*(?:\w+:|\/\/))|(?:\w+\[("\w+"|\w+\|\|))|(?:[\d\W]\|\|[\d\W]|\W=\w+,)|(?:\/\s*\+\s*[a-z"])|(?:=\s*\$[^([]*\()|(?:=\s*\(\s*")]]></xsd:attribute>
                <xsd:attribute name="description">Detects obfuscated JavaScript script injections</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">26</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:[^:\s\w]+\s*[^\w\/](href|protocol|host|hostname|pathname|hash|port|cookie)[^\w])]]></xsd:attribute>
                <xsd:attribute name="description">Detects JavaScript cookie stealing and redirection attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">27</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:(?:vbs|vbscript|data):.*[,+])|(?:\w+\s*=\W*(?!https?)\w+:)|(jar:\w+:)|(=\s*"?\s*vbs(?:ript)?:)|(language\s*=\s?"?\s*vbs(?:ript)?)|on\w+\s*=\*\w+\-"?]]></xsd:attribute>
                <xsd:attribute name="description">Detects data: URL injections, VBS injections and common URI schemes</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">28</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:firefoxurl:\w+\|)|(?:(?:file|res|telnet|nntp|news|mailto|chrome)\s*:\s*[%&#xu\/]+)|(wyciwyg|firefoxurl\s*:\s*\/\s*\/)]]></xsd:attribute>
                <xsd:attribute name="description">Detects IE firefoxurl injections, cache poisoning attempts and local file inclusion/execution</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">29</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:binding\s?=|moz-binding|behavior\s?=)|(?:[\s\/]style\s*=\s*[-\\])]]></xsd:attribute>
                <xsd:attribute name="description">Detects bindings and behavior injections</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">30</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:=\s*\w+\s*\+\s*")|(?:\+=\s*\(\s")|(?:!+\s*[\d.,]+\w?\d*\s*\?)|(?:=\s*\[s*\])|(?:"\s*\+\s*")|(?:[^\s]\[\s*\d+\s*\]\s*[;+])|(?:"\s*[&|]+\s*")|(?:\/\s*\?\s*")|(?:\/\s*\)\s*\[)|(?:\d\?.+:\d)|(?:]\s*\[\W*\w)|(?:[^\s]\s*=\s*\/)]]></xsd:attribute>
                <xsd:attribute name="description">Detects common XSS concatenation patterns 1/2</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">31</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:=\s*\d*\.\d*\?\d*\.\d*)|(?:[|&]{2,}\s*")|(?:!\d+\.\d*\?")|(?:\/:[\w.]+,)|(?:=[\d\W\s]*\[[^]]+\])|(?:\?\w+:\w+)]]></xsd:attribute>
                <xsd:attribute name="description">Detects common XSS concatenation patterns 2/2</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">32</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:[^\w\s=]on(?!g\&gt;)\w+[^=_+-]*=[^$]+(?:\W|\&gt;)?)]]></xsd:attribute>
                <xsd:attribute name="description">Detects possible event handlers</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">33</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\<\w*:?\s(?:[^\>]*)t(?!rong))|(?:\<scri)|(<\w+:\w+)]]></xsd:attribute>
                <xsd:attribute name="description">Detects obfuscated script tags and XML wrapped HTML</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">34</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\<\/\w+\s\w+)|(?:@(?:cc_on|set)[\s@,"=])]]></xsd:attribute>
                <xsd:attribute name="description">Detects attributes in closing tags and conditional compilation tokens</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">35</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:--[^\n]*$)|(?:\<!-|-->)|(?:[^*]\/\*|\*\/[^*])|(?:(?:[\W\d]#|--|{)$)|(?:\/{3,}.*$)|(?:<!\[\W)|(?:\]!>)]]></xsd:attribute>
                <xsd:attribute name="description">Detects common comment types</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">3</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">37</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\<base\s+)|(?:<!(?:element|entity|\[CDATA))]]></xsd:attribute>
                <xsd:attribute name="description">Detects base href injections and XML entity injections</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">38</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\<[\/]?(?:[i]?frame|applet|isindex|marquee|keygen|script|audio|video|input|button|textarea|style|base|body|meta|link|object|embed|param|plaintext|xm\w+|image|im(?:g|port)))]]></xsd:attribute>
                <xsd:attribute name="description">Detects possibly malicious html elements including some attributes</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">39</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\\x[01fe][\db-ce-f])|(?:%[01fe][\db-ce-f])|(?:&#[01fe][\db-ce-f])|(?:\\[01fe][\db-ce-f])|(?:&#x[01fe][\db-ce-f])]]></xsd:attribute>
                <xsd:attribute name="description">Detects nullbytes and other dangerous characters</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">40</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\)\s*when\s*\d+\s*then)|(?:"\s*(?:#|--|{))|(?:\/\*!\s?\d+)|(?:ch(?:a)?r\s*\(\s*\d)|(?:(?:(n?and|x?or|not)\s+|\|\||\&\&)\s*\w+\()]]></xsd:attribute>
                <xsd:attribute name="description">Detects MySQL comments, conditions and ch(a)r injections</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">6</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">41</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:[\s()]case\s*\()|(?:\)\s*like\s*\()|(?:having\s*[^\s]+\s*[^\w\s])|(?:if\s?\([\d\w]\s*[=<>~])]]></xsd:attribute>
                <xsd:attribute name="description">Detects conditional SQL injection attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">6</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">42</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:"\s*or\s*"?\d)|(?:\\x(?:23|27|3d))|(?:^.?"$)|(?:(?:^["\\]*(?:[\d"]+|[^"]+"))+\s*(?:n?and|x?or|not|\|\||\&\&)\s*[\w"[+&!@(),.-])|(?:[^\w\s]\w+\s*[|-]\s*"\s*\w)|(?:@\w+\s+(and|or)\s*["\d]+)|(?:@[\w-]+\s(and|or)\s*[^\w\s])|(?:[^\w\s:]\s*\d\W+[^\w\s]\s*".)|(?:\Winformation_schema|table_name\W)]]></xsd:attribute>
                <xsd:attribute name="description">Detects classic SQL injection probings 1/2</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">6</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">43</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:"\s*\*.+(?:or|id)\W*"\d)|(?:\^")|(?:^[\w\s"-]+(?<=and\s)(?<=or\s)(?<=xor\s)(?<=nand\s)(?<=not\s)(?<=\|\|)(?<=\&\&)\w+\()|(?:"[\s\d]*[^\w\s]+\W*\d\W*.*["\d])|(?:"\s*[^\w\s?]+\s*[^\w\s]+\s*")|(?:"\s*[^\w\s]+\s*[\W\d].*(?:#|--))|(?:".*\*\s*\d)|(?:"\s*or\s[^\d]+[\w-]+.*\d)|(?:[()*<>%+-][\w-]+[^\w\s]+"[^,])]]></xsd:attribute>
                <xsd:attribute name="description">Detects classic SQL injection probings 2/2</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">6</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">44</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\d"\s+"\s+\d)|(?:^admin\s*"|(\/\*)+"+\s?(?:--|#|\/\*|{)?)|(?:"\s*or[\w\s-]+\s*[+<>=(),-]\s*[\d"])|(?:"\s*[^\w\s]?=\s*")|(?:"\W*[+=]+\W*")|(?:"\s*[!=|][\d\s!=+-]+.*["(].*$)|(?:"\s*[!=|][\d\s!=]+.*\d+$)|(?:"\s*like\W+[\w"(])|(?:\sis\s*0\W)|(?:where\s[\s\w\.,-]+\s=)|(?:"[<>~]+")]]></xsd:attribute>
                <xsd:attribute name="description">Detects basic SQL authentication bypass attempts 1/3</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">7</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">45</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:union\s*(?:all|distinct|[(!@]*)\s*[([]*\s*select)|(?:\w+\s+like\s+\")|(?:like\s*"\%)|(?:"\s*like\W*["\d])|(?:"\s*(?:n?and|x?or|not |\|\||\&\&)\s+[\s\w]+=\s*\w+\s*having)|(?:"\s*\*\s*\w+\W+")|(?:"\s*[^?\w\s=.,;)(]+\s*[(@"]*\s*\w+\W+\w)|(?:select\s*[\[\]()\s\w\.,"-]+from)|(?:find_in_set\s*\()]]></xsd:attribute>
                <xsd:attribute name="description">Detects basic SQL authentication bypass attempts 2/3</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">7</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">46</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:in\s*\(+\s*select)|(?:(?:n?and|x?or|not |\|\||\&\&)\s+[\s\w+]+(?:regexp\s*\(|sounds\s+like\s*"|[=\d]+x))|("\s*\d\s*(?:--|#))|(?:"[%&<>^=]+\d\s*(=|or))|(?:"\W+[\w+-]+\s*=\s*\d\W+")|(?:"\s*is\s*\d.+"?\w)|(?:"\|?[\w-]{3,}[^\w\s.,]+")|(?:"\s*is\s*[\d.]+\s*\W.*")]]></xsd:attribute>
                <xsd:attribute name="description">Detects basic SQL authentication bypass attempts 3/3</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">7</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">47</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:[\d\W]\s+as\s*["\w]+\s*from)|(?:^[\W\d]+\s*(?:union|select|create|rename|truncate|load|alter|delete|update|insert|desc))|(?:(?:select|create|rename|truncate|load|alter|delete|update|insert|desc)\s+(?:(?:group_)concat|char|load_file)\s?\(?)|(?:end\s*\);)|("\s+regexp\W)|(?:[\s(]load_file\s*\()]]></xsd:attribute>
                <xsd:attribute name="description">Detects concatenated basic SQL injection and SQLLFI attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">48</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:@.+=\s*\(\s*select)|(?:\d+\s*or\s*\d+\s*[\-+])|(?:\/\w+;?\s+(?:having|and|or|select)\W)|(?:\d\s+group\s+by.+\()|(?:(?:;|#|--)\s*(?:drop|alter))|(?:(?:;|#|--)\s*(?:update|insert)\s*\w{2,})|(?:[^\w]SET\s*@\w+)|(?:(?:n?and|x?or|not |\|\||\&\&)[\s(]+\w+[\s)]*[!=+]+[\s\d]*["=()])]]></xsd:attribute>
                <xsd:attribute name="description">Detects chained SQL injection attempts 1/2</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">6</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">49</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:"\s+and\s*=\W)|(?:\(\s*select\s*\w+\s*\()|(?:\*\/from)|(?:\+\s*\d+\s*\+\s*@)|(?:\w"\s*(?:[-+=|@]+\s*)+[\d(])|(?:coalesce\s*\(|@@\w+\s*[^\w\s])|(?:\W!+"\w)|(?:";\s*(?:if|while|begin))|(?:"[\s\d]+=\s*\d)|(?:order\s+by\s+if\w*\s*\()|(?:[\s(]+case\d*\W.+[tw]hen[\s(])]]></xsd:attribute>
                <xsd:attribute name="description">Detects chained SQL injection attempts 2/2</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">6</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">50</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:(select|;)\s+(?:benchmark|if|sleep)\s*?\(\s*\(?\s*\w+)]]></xsd:attribute>
                <xsd:attribute name="description">Detects SQL benchmark and sleep injection attempts including conditional queries</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">51</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:create\s+function\s+\w+\s+returns)|(?:;\s*(?:select|create|rename|truncate|load|alter|delete|update|insert|desc)\s*[\[(]?\w{2,})]]></xsd:attribute>
                <xsd:attribute name="description">Detects MySQL UDF injection and other data/structure manipulation attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">6</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">52</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:alter\s*\w+.*character\s+set\s+\w+)|(";\s*waitfor\s+time\s+")|(?:";.*:\s*goto)]]></xsd:attribute>
                <xsd:attribute name="description">Detects MySQL charset switch and MSSQL DoS attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">6</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">53</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:procedure\s+analyse\s*\()|(?:;\s*(declare|open)\s+[\w-]+)|(?:create\s+(procedure|function)\s*\w+\s*\(\s*\)\s*-)|(?:declare[^\w]+[@#]\s*\w+)|(exec\s*\(\s*@)]]></xsd:attribute>
                <xsd:attribute name="description">Detects MySQL and PostgreSQL stored procedure/function injections</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">7</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">54</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:select\s*pg_sleep)|(?:waitfor\s*delay\s?"+\s?\d)|(?:;\s*shutdown\s*(?:;|--|#|\/\*|{))]]></xsd:attribute>
                <xsd:attribute name="description">Detects Postgres pg_sleep injection, waitfor delay attacks and database shutdown attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">55</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\sexec\s+xp_cmdshell)|(?:"\s*!\s*["\w])|(?:from\W+information_schema\W)|(?:(?:(?:current_)?user|database|schema|connection_id)\s*\([^\)]*)|(?:";?\s*(?:select|union|having)\s*[^\s])|(?:\wiif\s*\()|(?:exec\s+master\.)|(?:union select @)|(?:union[\w(\s]*select)|(?:select.*\w?user\()|(?:into[\s+]+(?:dump|out)file\s*")]]></xsd:attribute>
                <xsd:attribute name="description">Detects MSSQL code execution and information gathering attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">56</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:merge.*using\s*\()|(execute\s*immediate\s*")|(?:\W+\d*\s*having\s*[^\s\-])|(?:match\s*[\w(),+-]+\s*against\s*\()]]></xsd:attribute>
                <xsd:attribute name="description">Detects MATCH AGAINST, MERGE, EXECUTE IMMEDIATE and HAVING injections</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">57</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:,.*[)\da-f"]"(?:".*"|\Z|[^"]+))|(?:\Wselect.+\W*from)|((?:select|create|rename|truncate|load|alter|delete|update|insert|desc)\s*\(\s*space\s*\()]]></xsd:attribute>
                <xsd:attribute name="description">Detects MySQL comment-/space-obfuscated injections and backtick termination</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">58</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:@[\w-]+\s*\()|(?:]\s*\(\s*["!]\s*\w)|(?:<[?%](?:php)?.*(?:[?%]>)?)|(?:;[\s\w|]*\$\w+\s*=)|(?:\$\w+\s*=(?:(?:\s*\$?\w+\s*[(;])|\s*".*"))|(?:;\s*\{\W*\w+\s*\()]]></xsd:attribute>
                <xsd:attribute name="description">Detects code injection attempts 1/3</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">7</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">59</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:(?:[;]+|(<[?%](?:php)?)).*(?:define|eval|file_get_contents|include|require|require_once|set|shell_exec|phpinfo|system|passthru|preg_\w+|execute)\s*["(@])]]></xsd:attribute>
                <xsd:attribute name="description">Detects code injection attempts 2/3</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">7</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">60</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:(?:[;]+|(<[?%](?:php)?)).*[^\w](?:echo|print|print_r|var_dump|[fp]open))|(?:;\s*rm\s+-\w+\s+)|(?:;.*{.*\$\w+\s*=)|(?:\$\w+\s*\[\]\s*=\s*)]]></xsd:attribute>
                <xsd:attribute name="description">Detects code injection attempts 3/3</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">7</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">62</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:function[^(]*\([^)]*\))|(?:(?:delete|void|throw|instanceof|new|typeof)[^\w.]+\w+\s*[([])|([)\]]\s*\.\s*\w+\s*=)|(?:\(\s*new\s+\w+\s*\)\.)]]></xsd:attribute>
                <xsd:attribute name="description">Detects common function declarations and special JS operators</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">63</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:[\w.-]+@[\w.-]+%(?:[01][\db-ce-f])+\w+:)]]></xsd:attribute>
                <xsd:attribute name="description">Detects common mail header injections</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">spam</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">64</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\.pl\?\w+=\w?\|\w+;)|(?:\|\(\w+=\*)|(?:\*\s*\)+\s*;)]]></xsd:attribute>
                <xsd:attribute name="description">Detects perl echo shellcode injection and LDAP vectors</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">65</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:(^|\W)const\s+[\w\-]+\s*=)|(?:(?:do|for|while)\s*\([^;]+;+\))|(?:(?:^|\W)on\w+\s*=[\w\W]*(?:on\w+|alert|eval|print|confirm|prompt))|(?:groups=\d+\(\w+\))|(?:(.)\1{128,})]]></xsd:attribute>
                <xsd:attribute name="description">Detects basic XSS DoS attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                    <xsd:element name="tag" type="xsd:string">dos</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">5</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">67</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\({2,}\+{2,}:{2,})|(?:\({2,}\+{2,}:+)|(?:\({3,}\++:{2,})|(?:\$\[!!!\])]]></xsd:attribute>
                <xsd:attribute name="description">Detects unknown attack vectors based on PHPIDS Centrifuge detection</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                    <xsd:element name="tag" type="xsd:string">rfe</xsd:element>
                    <xsd:element name="tag" type="xsd:string">lfi</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">7</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">68</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:[\s\/"]+[-\w\/\\\*]+\s*=.+(?:\/\s*>))]]></xsd:attribute>
                <xsd:attribute name="description">Finds attribute breaking injections including obfuscated attributes</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">69</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:(?:msgbox|eval)\s*\+|(?:language\s*=\*vbscript))]]></xsd:attribute>
                <xsd:attribute name="description">Finds basic VBScript injection attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">70</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:\[\$(?:ne|eq|lte?|gte?|n?in|mod|all|size|exists|type|slice|or)\])]]></xsd:attribute>
                <xsd:attribute name="description">Finds basic MongoDB SQL injection attempts</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">71</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:[\s\d\/"]+(?:on\w+|style|poster|background)=[$"\w])|(?:-type\s*:\s*multipart)]]></xsd:attribute>
                <xsd:attribute name="description">Finds malicious attribute injection attempts and MHTML attacks</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">xss</xsd:element>
                    <xsd:element name="tag" type="xsd:string">csrf</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">6</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">72</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:(sleep\((\s*)(\d*)(\s*)\)|benchmark\((.*)\,(.*)\)))]]></xsd:attribute>
                <xsd:attribute name="description">Detects blind sqli tests using sleep() or benchmark().</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">73</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:(\%SYSTEMROOT\%))]]></xsd:attribute>
                <xsd:attribute name="description">An attacker is trying to locate a file to read or write.</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">files</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">75</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:(((.*)\%[c|d|i|e|f|g|o|s|u|x|p|n]){8}))]]></xsd:attribute>
                <xsd:attribute name="description">Looking for a format string attack</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">format string</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">76</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:(union(.*)select(.*)from))]]></xsd:attribute>
                <xsd:attribute name="description">Looking for basic sql injection. Common attack string for mysql, oracle and others.</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">3</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">77</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:^(-0000023456|4294967295|4294967296|2147483648|2147483647|0000012345|-2147483648|-2147483649|0000023456|2.2250738585072007e-308|1e309)$)]]></xsd:attribute>
                <xsd:attribute name="description">Looking for integer overflow attacks, these are taken from skipfish, except 2.2250738585072007e-308 is the "magic number" crash</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">sqli</xsd:element>
                    <xsd:element name="tag" type="xsd:string">id</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">3</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">78</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(?:%23.*?%0a)]]></xsd:attribute>
                <xsd:attribute name="description">Detects SQL comment filter evasion</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">format string</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">79</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(>>) .]]></xsd:attribute>
                <xsd:attribute name="description">Invalid filename extensions and filesystem injection attemps</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">files</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>
            <xsd:element name="Filter">
                <xsd:attribute name="id">80</xsd:attribute>
                <xsd:attribute name="rule"><![CDATA[(\`.*) .]]></xsd:attribute>
                <xsd:attribute name="description">Injection attemp of command proc execution, continues after processing of a command</xsd:attribute>
                <xsd:simpleType name="tag">
                    <xsd:list>
                    <xsd:element name="tag" type="xsd:string">files</xsd:element>
                </xsd:list></xsd:simpleType>
                <xsd:attribute name="impact">4</xsd:attribute>
            </xsd:element>


            2,048 characters
        </xsd:element>
    </xsd:schema>
</root>