<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Frends.Community.SecurityThreatDiagnostics</name>
    </assembly>
    <members>
        <member name="T:Frends.Community.SecurityThreatDiagnostics.Validation">
            <summary>
            This class is responsible for transmitting the validation parameters from the runtime configuration into process phase execution.
            </summary>
        </member>
        <member name="P:Frends.Community.SecurityThreatDiagnostics.Validation.Payload">
            <summary>
            The payload or the attribute value to be validated.
            </summary>
        </member>
        <member name="T:Frends.Community.SecurityThreatDiagnostics.AllowedIPAddresses">
            <summary>
            Challenge against allowed IP addresses
            </summary>
        </member>
        <member name="P:Frends.Community.SecurityThreatDiagnostics.AllowedIPAddresses.Host">
            <summary>
            Current HTTP url where the message is coming from
            </summary>
        </member>
        <member name="P:Frends.Community.SecurityThreatDiagnostics.AllowedIPAddresses.WhiteListedIpAddress">
            <summary>
            Whitelisted IP addresses to be bypassed by the process engine's validation
            </summary>
        </member>
        <member name="P:Frends.Community.SecurityThreatDiagnostics.AllowedIPAddresses.BlackListedIpAddresses">
            <summary>
            Blacklisted IP addresses and ranges which will be blocked by the process execution engine 
            </summary>
        </member>
        <member name="T:Frends.Community.SecurityThreatDiagnostics.WhiteListedHeaders">
            <summary>
            Challenge against allowed HTTP headers
            </summary>
        </member>
        <member name="P:Frends.Community.SecurityThreatDiagnostics.WhiteListedHeaders.HttpRedirectUri">
            <summary>
            Define the HTTP(S) redirect url   
            </summary>
        </member>
        <member name="P:Frends.Community.SecurityThreatDiagnostics.WhiteListedHeaders.AllowedHttpHeaders">
            <summary>
            Define the allowed http headers
            </summary>
        </member>
        <member name="P:Frends.Community.SecurityThreatDiagnostics.WhiteListedHeaders.HttpHeaders">
            <summary>
            Request based http headers with a key value pair
            </summary>
        </member>
        <member name="T:Frends.Community.SecurityThreatDiagnostics.Options">
            <summary>
            Options class provides additional parameters.
            </summary>
        </member>
        <member name="P:Frends.Community.SecurityThreatDiagnostics.Options.MaxIterations">
            <summary>
            How many iteration round for decoding of the payloadx.
            </summary>
        </member>
        <member name="P:Frends.Community.SecurityThreatDiagnostics.Options.Encoding">
            <summary>
            Which encoding should be used, default UTF-8.
            </summary>
        </member>
        <member name="T:Frends.Community.SecurityThreatDiagnostics.SecurityThreatDiagnostics">
            <summary>
            This is task which validates the common attack patterns against the underlying system.
            Documentation: https://github.com/CommunityHiQ/Frends.Community.SecurityThreatDiagnostics
            Throws application exception if diagnostics find vulnerability from the payload challenge.
            </summary>
        </member>
        <member name="M:Frends.Community.SecurityThreatDiagnostics.SecurityThreatDiagnostics.ChallengeAgainstSecurityThreats(Frends.Community.SecurityThreatDiagnostics.Validation,Frends.Community.SecurityThreatDiagnostics.Options,System.Threading.CancellationToken)">
            <summary>
            This is task which validates data 
            Documentation: https://github.com/CommunityHiQ/Frends.Community.SecurityThreatDiagnostics
            Throws application exception if diagnostics find vulnerability from the payload challenge.
            </summary>
            <param name="validation">Runtime element to be diagnosted.</param>
            <param name="options">Options for the runtime validation.</param>
            <param name="cancellationToken"></param>
            <returns>{bool challenges for validation} </returns>
        </member>
        <member name="M:Frends.Community.SecurityThreatDiagnostics.SecurityThreatDiagnostics.ChallengeIPAddresses(Frends.Community.SecurityThreatDiagnostics.AllowedIPAddresses,System.Threading.CancellationToken)">
            <summary>
             Verifies that the IP is in given whitelist of known IP addresses.
            Documentation: https://github.com/CommunityHiQ/Frends.Community.SecurityThreatDiagnostics
            Throws application exception if diagnostics find that IP address is not valid.
            </summary>
            <param name="allowedIpAddresses">Define IP addresses which can bypass the validation.</param>
            <param name="cancellationToken"></param>
            <returns>{bool challanges}</returns>
        </member>
        <member name="M:Frends.Community.SecurityThreatDiagnostics.SecurityThreatDiagnostics.ChallengeSecurityHeaders(Frends.Community.SecurityThreatDiagnostics.WhiteListedHeaders,Frends.Community.SecurityThreatDiagnostics.Options,System.Threading.CancellationToken)">
            <summary>
             Verifies the header content and validates data.
            Documentation: https://github.com/CommunityHiQ/Frends.Community.SecurityThreatDiagnostics
            Throws application exception if diagnostics find that header data is not valid.
            </summary>
            <param name="WhiteListedHeaders">Known HTTP headers to be bypassed in validation.</param>
            <param name="cancellationToken"></param>
            <returns>{bool challanges}</returns>
        </member>
        <member name="M:Frends.Community.SecurityThreatDiagnostics.SecurityThreatDiagnostics.ChallengeCharacterEncoding(Frends.Community.SecurityThreatDiagnostics.Validation,Frends.Community.SecurityThreatDiagnostics.Options,System.Threading.CancellationToken)">
            <summary>
             Challenges character encoding of the given data.
            Documentation: https://github.com/CommunityHiQ/Frends.Community.SecurityThreatDiagnostics
            Throws application exception if diagnostics find that character is not part of the encoding set.
            </summary>
            <param name="WhiteListedHeaders">Known HTTP headers to be bypassed in validation.</param>
            <param name="cancellationToken"></param>
            <returns>{bool challanges}</returns>
        </member>
    </members>
</doc>
